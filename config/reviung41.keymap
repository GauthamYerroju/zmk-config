/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

// #define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
// #define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10
#include <dt-bindings/zmk/pointing.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |   BSPC    |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |    '      |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT(RET) |
//                         | ALT | LWR | SPC | RSE  | ALT |                            |
// ------------------------------------------------------------------------------------|


                        bindings = <
   &lt 4 ESC               &kp Q   &kp W   &kp E   &kp R   &kp T           &kp Y   &kp U   &kp I       &kp O      &kp P      &kp BSLH
   &mt &caps_word LSHFT    &kp A   &kp S   &kp D   &kp F   &kp G           &kp H   &kp J   &kp K       &kp L      &kp SEMI   &mt RSHFT SQT
   &kp LCTRL               &kp Z   &kp X   &kp C   &kp V   &kp B           &kp N   &kp M   &kp COMMA   &kp DOT    &kp FSLH   &lt 4 &sl 4
                             &kp GUI    &lt SPACE 1    &kp RET    &lt BSPC 2    &sk RALT
                        >;
                };

                lower_layer {
                        bindings = <
   &kp GRAVE    &kp C_PREV   &kp PGUP    &kp UP         &kp PGDN &C_VOL_UP        &kp PLUS  &kp N7  &kp N8  &kp N9  &kp ASTRK    &trans
   &kp EQUAL    &kp C_PP     &kp LFT     &kp DWN        &kp RGT  &C_VOL_DN        &kp MINUS &kp N4  &kp N5  &kp N6  &kp DOT      &trans
   &kp UNDER    &kp C_NEXT   &kp HOME    &kp K_CMENU    &kp END  &C_MUTE          &kp N0    &kp N1  &kp N2  &kp N3  &kp FSLH     &trans
                                                &trans      &trans      &to 3        &mo 3       &trans
                        >;
                };

                raise_layer {
                        bindings = <
   &TILDE &LBRC     &AMPS   &PIPE   &RBRC    &none              &none             &mkp MB4          &mmv MOVE_UP      &mkp MB5           &none   &trans
   &trans &LPAR     &EXCL   &AT     &RPAR    &DLLR              &msc SCRL_UP      &mmv MOVE_LEFT    &mmv MOVE_DOWN    &mmv MOVE_RIGHT    &none   &trans
   &trans &LBKT     &PRCNT  &CARET  &RBKT    &HASH              &msc SCRL_DOWN    &LCLK             &MCLK     &RCLK     &none   &trans
                              &trans      &mo 3       &to 3        &trans      &trans
                        >;
                };


                adjust_layer {
                        bindings = <
   &to 1    &rgb_ug RGB_BRI &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_EFF &rgb_ug RGB_TOG    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
   &none    &rgb_ug RGB_BRD &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_EFR &none              &none        &none        &none        &none        &none        &none
   &none           &none           &none           &none           &none &none              &sys_reset       &none        &none        &none        &none        &none
                                                             &trans      &trans       &to 1        &trans      &trans
                        >;
                };
        };

                fn_layer {
                        bindings = <
   &trans &kp F1     &kp F2   &kp F3    &kp F4    &kp F5              &kp F10   &kp F7    &kp F8    &kp F9    &none   &trans
   &trans &kp F6     &kp F7   &kp F8    &kp F9    &kp F10             &kp F11   &kp F4    &kp F5    &kp F6    &none   &trans
   &trans &kp F11    &kp F12  &kp F13   &kp F14   &kp F15             &kp F12   &kp F1    &kp F2    &kp F3    &none   &trans
                              &trans      &trans       &trans        &trans      &trans
                        >;
                };

};
